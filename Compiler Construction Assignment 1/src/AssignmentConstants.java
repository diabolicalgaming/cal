/* Generated By:JavaCC: Do not edit this line. AssignmentConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface AssignmentConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int COMMA = 4;
  /** RegularExpression Id. */
  int SEMICOLON = 5;
  /** RegularExpression Id. */
  int COLON = 6;
  /** RegularExpression Id. */
  int ASSIGNMENT = 7;
  /** RegularExpression Id. */
  int LBRACE = 8;
  /** RegularExpression Id. */
  int RBRACE = 9;
  /** RegularExpression Id. */
  int PLUS = 10;
  /** RegularExpression Id. */
  int MINUS = 11;
  /** RegularExpression Id. */
  int NOT = 12;
  /** RegularExpression Id. */
  int OR = 13;
  /** RegularExpression Id. */
  int AND = 14;
  /** RegularExpression Id. */
  int EQUALS = 15;
  /** RegularExpression Id. */
  int NOT_EQUALS = 16;
  /** RegularExpression Id. */
  int LESS_THAN = 17;
  /** RegularExpression Id. */
  int LESS_THAN_OR_EQUAL = 18;
  /** RegularExpression Id. */
  int GREATER_THAN = 19;
  /** RegularExpression Id. */
  int GREATER_THAN_OR_EQUAL = 20;
  /** RegularExpression Id. */
  int VARIABLE = 21;
  /** RegularExpression Id. */
  int CONSTANT = 22;
  /** RegularExpression Id. */
  int RETURN = 23;
  /** RegularExpression Id. */
  int INTEGER = 24;
  /** RegularExpression Id. */
  int BOOLEAN = 25;
  /** RegularExpression Id. */
  int VOID = 26;
  /** RegularExpression Id. */
  int MAIN = 27;
  /** RegularExpression Id. */
  int IF = 28;
  /** RegularExpression Id. */
  int ELSE = 29;
  /** RegularExpression Id. */
  int TRUE = 30;
  /** RegularExpression Id. */
  int FALSE = 31;
  /** RegularExpression Id. */
  int WHILE = 32;
  /** RegularExpression Id. */
  int BEGIN = 33;
  /** RegularExpression Id. */
  int END = 34;
  /** RegularExpression Id. */
  int IS = 35;
  /** RegularExpression Id. */
  int SKIP_TOKEN = 36;
  /** RegularExpression Id. */
  int DIGIT = 37;
  /** RegularExpression Id. */
  int ZERO = 38;
  /** RegularExpression Id. */
  int ID = 39;
  /** RegularExpression Id. */
  int LETTER = 40;
  /** RegularExpression Id. */
  int UNDERSCORE = 41;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<token of kind 1>",
    "<token of kind 2>",
    "<token of kind 3>",
    "\",\"",
    "\";\"",
    "\":\"",
    "\":=\"",
    "\"(\"",
    "\")\"",
    "\"+\"",
    "\"-\"",
    "\"~\"",
    "\"|\"",
    "\"&\"",
    "\"=\"",
    "\"!=\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"variable\"",
    "\"constant\"",
    "\"return\"",
    "\"integer\"",
    "\"boolean\"",
    "\"void\"",
    "\"main\"",
    "\"if\"",
    "\"else\"",
    "\"true\"",
    "\"false\"",
    "\"while\"",
    "\"begin\"",
    "\"end\"",
    "\"is\"",
    "\"skip\"",
    "<DIGIT>",
    "\"0\"",
    "<ID>",
    "<LETTER>",
    "\"_\"",
  };

}
